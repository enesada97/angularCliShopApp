{"version":3,"sources":["./src/app/components/product/product-add-forms1/product-add-forms1.component.ts","./src/app/components/product/product-add-forms1/product-add-forms1.component.html","./src/app/components/product/product.component.ts","./src/app/components/product/product.component.html","./src/environments/environment.ts","./src/app/components/nav/nav.component.ts","./src/app/components/nav/nav.component.html","./src/app/services/product.service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/components/login/login.component.ts","./src/app/components/login/login.component.html","./src/app/components/login/user.ts","./src/app/app.module.ts","./src/app/services/alertify.service.ts","./src/app/services/category.service.ts","./src/app/services/account.service.ts","./src/app/components/product/product-filter.pipe.ts","./src/app/components/product/product-add-forms2/product-add-forms2.component.ts","./src/app/components/product/product-add-forms2/product-add-forms2.component.html","./src/app/components/category/category.component.ts","./src/app/components/category/category.component.html","./src/app/components/product/product.ts","./src/app/components/login/login.guard.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { AlertifyService } from 'src/app/services/alertify.service';\nimport { CategoryService } from 'src/app/services/category.service';\nimport { ProductService } from 'src/app/services/product.service';\nimport { Category } from '../../category/category';\nimport { Product } from '../product';\n\n@Component({\n  selector: 'app-product-add-forms1',\n  templateUrl: './product-add-forms1.component.html',\n  styleUrls: ['./product-add-forms1.component.css'],\n  providers:[CategoryService,ProductService]\n})\nexport class ProductAddForms1Component implements OnInit {\n\n  constructor(private alertifyService:AlertifyService,private categoryService:CategoryService,private productService:ProductService) { }\n  model : Product = new Product();\n  categories: Category[];\n  ngOnInit(): void {\n    this.categoryService\n      .getCategories()\n      .subscribe((data) => (this.categories = data));\n  }\n  add(form:NgForm) {\n    this.productService.addProduct(this.model).subscribe(data=>{\n      this.alertifyService.success(data.name + \" başarıyla eklendi.\")\n    });\n  }\n}\n\n","<h3>Yeni Ürün Ekle</h3>\n<form #productAddForm=\"ngForm\" (ngSubmit)=\"add(productAddForm)\">\n  <div class=\"form-group\">\n    <input\n      type=\"text\"\n      placeholder=\"Ürün adı\"\n      #name=\"ngModel\"\n      [(ngModel)]=\"model.name\"\n      class=\"form-control\"\n      name=\"name\"\n      id=\"name\"\n      required\n    />\n    <div *ngIf=\"name.invalid && name.dirty\" class=\"alert alert-danger\">\n      Ürün ismi gereklidir\n    </div>\n  </div>\n  <div class=\"form-group\">\n    <input\n      type=\"text\"\n      placeholder=\"Açıklama\"\n      #description=\"ngModel\"\n      [(ngModel)]=\"model.description\"\n      class=\"form-control\"\n      name=\"description\"\n      id=\"description\"\n      required\n    />\n    <div\n      *ngIf=\"description.invalid && description.dirty\"\n      class=\"alert alert-danger\"\n    >\n      Açıklama gereklidir\n    </div>\n  </div>\n  <div class=\"form-group\">\n    <input\n      type=\"text\"\n      placeholder=\"Ürün resmi\"\n      #imageUrl=\"ngModel\"\n      [(ngModel)]=\"model.imageUrl\"\n      class=\"form-control\"\n      name=\"imageUrl\"\n      id=\"imageUrl\"\n      required\n    />\n    <div *ngIf=\"imageUrl.invalid && imageUrl.dirty\" class=\"alert alert-danger\">\n      Fotoğraf gereklidir\n    </div>\n  </div>\n  <div class=\"form-group\">\n    <input\n      type=\"text\"\n      placeholder=\"Ürün Fiyatı\"\n      #price=\"ngModel\"\n      [(ngModel)]=\"model.price\"\n      class=\"form-control\"\n      name=\"price\"\n      id=\"price\"\n      required\n    />\n    <div *ngIf=\"price.invalid && price.dirty\" class=\"alert alert-danger\">\n      Fiyat gereklidir\n    </div>\n  </div>\n  <div class=\"form-group\">\n    <select class=\"form-control\"\n      #categoryId=\"ngModel\"\n      [(ngModel)]=\"model.categoryId\"\n      id=\"categoryId\"\n      name=\"categoryId\"\n      required\n    >\n      <option\n        *ngFor=\"let category of categories\"\n        [value]=\"category.id\"\n      >{{category.name+ \"  \" + category.id}}</option>\n    </select>\n    <div\n      *ngIf=\"categoryId.invalid && categoryId.touched\"\n      class=\"alert alert-danger\"\n    >\n      Kategori gereklidir\n    </div>\n  </div>\n  <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"productAddForm.invalid\">Ürün Ekle</button>\n</form>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { AlertifyService } from 'src/app/services/alertify.service';\nimport { ProductService } from 'src/app/services/product.service';\nimport { Product } from './product';\n\n@Component({\n  selector: 'app-product',\n  templateUrl: './product.component.html',\n  styleUrls: ['./product.component.css'],\n  providers: [ProductService],\n})\nexport class ProductComponent implements OnInit {\n  constructor(\n    private alertifyService: AlertifyService,\n    private ProductService: ProductService,\n    private activatedRoute:ActivatedRoute\n  ) {}\n  title = 'Ürün Listesi';\n  filterText = '';\n  products: Product[];\n  //bu component ilk kez açıldığı zaman açılır\n  ngOnInit(): void {\n    this.activatedRoute.params.subscribe(params=>{\n      this.ProductService.getProduct(params[\"categoryId\"]).subscribe(\n        (data) => (this.products = data\n          ));  \n        })\n    \n  }\n  addToCart(product) {\n    this.alertifyService.success(product.name + ' added');\n  }\n}\n","<!-- <h3 *ngIf=\"products; else noProduct\">{{ title }}</h3> -->\n<app-category></app-category>\n<div class=\"form-group\">\n  <input\n    class=\"form-control\"\n    id=\"productName\"\n    placeholder=\"Ürün ara\"\n    [(ngModel)]=\"filterText\"\n  />\n  <small *ngIf=\"filterText\"class=\"form-text text-muted\"\n    ><strong><div class=\"alert alert-success\" role=\"alert\">\n        Şu an {{filterText}} aradınız \n      </div></strong></small>\n</div>\n\n<div class=\"row\">\n  <ng-template #noProduct>\n    <div class=\"alert alert-primary\" role=\"alert\">\n      Bu kategoride ürün yoktur\n    </div>\n  </ng-template>\n  <div *ngFor=\"let product of products | productFilter:filterText\" class=\"productbox\">\n    <img class=\"card-img-top\" [src]=\"product.imageUrl\" alt=\"Card image cap\" />\n    <div class=\"card-body\">\n      <h5 class=\"card-title\">\n        {{ product.name }}\n        {{ product.price | currency: \"USD\":\"symbol\":\"1.2-2\" }}\n      </h5>\n      <p class=\"card-text\">\n        {{ product.description }}\n      </p>\n      <a (click)=\"addToCart(product)\" class=\"btn btn-primary\">Sepete Ekle</a>\n    </div>\n  </div>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-nav',\n  templateUrl: './nav.component.html',\n  styleUrls: ['./nav.component.css']\n})\nexport class NavComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\n    <a class=\"navbar-brand\" href=\"#\">Navbar</a>\n    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n      <span class=\"navbar-toggler-icon\"></span>\n    </button>\n  \n    <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n      <ul class=\"navbar-nav mr-auto\">\n        <li class=\"nav-item active\">\n          <a class=\"nav-link\" href=\"#\">Home <span class=\"sr-only\">(current)</span></a>\n        </li>\n        <li class=\"nav-item\">\n          <a class=\"nav-link\" href=\"#\">Link</a>\n        </li>\n        <li class=\"nav-item dropdown\">\n          <a class=\"nav-link dropdown-toggle\" href=\"#\" id=\"navbarDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n            Dropdown\n          </a>\n          <div class=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\n            <a class=\"dropdown-item\" href=\"#\">Action</a>\n            <a class=\"dropdown-item\" href=\"#\">Another action</a>\n            <div class=\"dropdown-divider\"></div>\n            <a class=\"dropdown-item\" href=\"#\">Something else here</a>\n          </div>\n        </li>\n        <li class=\"nav-item\">\n          <a class=\"nav-link disabled\" href=\"#\">Disabled</a>\n        </li>\n      </ul>\n      <form class=\"form-inline my-2 my-lg-0\">\n        <input class=\"form-control mr-sm-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\">\n        <button class=\"btn btn-outline-success my-2 my-sm-0\" type=\"submit\">Search</button>\n      </form>\n    </div>\n  </nav>","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpErrorResponse, HttpHeaders } from '@angular/common/http';\nimport { Product } from '../components/product/product';\nimport { Observable,throwError } from 'rxjs';\n//tap ve catchError için ekledik\nimport { tap,catchError } from 'rxjs/operators';\n@Injectable()\nexport class ProductService {\n  constructor(private httpClient: HttpClient) {}\n  path = 'http://localhost:3000/products';\n  //observable dönüyor\n  //yani diğer taraf buna subsribe olabilir.\n  getProduct(categoryId): Observable<Product[]> {\n    let newPath= this.path;\n    if(categoryId){\n      newPath += \"?categoryId=\" +categoryId\n    }\n    //subscribe ilgili datayı istediğinizi belirtiyor\n    //aynı zamanda o datayı ne yapacağını belirtir.\n    //Product olarak datayı map et.\n    //pipe ile 2.ci bir işlem yapılabilir\n    //burada başka bir izleme subsribe yaparak hata ayıklayalım\n    return this.httpClient.get<Product[]>(newPath).pipe(\n      tap(data=>console.log(JSON.stringify(data))),\n      catchError(this.handleError)\n    );\n  }\n  addProduct(product:Product):Observable<Product>{\n    const httpOptions={\n      headers:new HttpHeaders({\n        \"Content-Type\":\"application/json\",\n        \"Authorization\":\"Token\"\n      })\n    }\n    return this.httpClient.post<Product>(this.path,product,httpOptions).pipe(\n      tap(data=>console.log(JSON.stringify(data))),\n      catchError(this.handleError)\n    );\n  }\n  handleError(err: HttpErrorResponse) {\n    let errorMessage =\" \"\n    if(err.error instanceof ErrorEvent){\n      errorMessage = \"Bir hata oluştu\" + err.error.message\n    }else{\n      errorMessage = \"Sistemsel bir hata\"\n    }\n    return throwError(errorMessage)\n  }\n  \n}\n","import { Component } from '@angular/core';\nimport { AccountService } from './services/account.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  constructor(private accountService:AccountService){\n\n  }\n  title = 'shop';\n  isLoggedIn(){\n    return this.accountService.isLoggedIn();\n  }\n  logOut(){\n    this.accountService.logOut();\n  }\n}\n","<body>\n  <nav class=\"navbar navbar-dark sticky-top bg-dark flex-md-nowrap p-0 shadow\">\n    <a class=\"navbar-brand col-md-3 col-lg-2 mr-0 px-3\" href=\"#\"\n      >E-Ticaret App</a\n    >\n    <button\n      class=\"navbar-toggler position-absolute d-md-none collapsed\"\n      type=\"button\"\n      data-toggle=\"collapse\"\n      data-target=\"#sidebarMenu\"\n      aria-controls=\"sidebarMenu\"\n      aria-expanded=\"false\"\n      aria-label=\"Toggle navigation\"\n    >\n      <span class=\"navbar-toggler-icon\"></span>\n    </button>\n    <ul class=\"navbar-nav px-3\">\n      <li class=\"nav-item text-nowrap\">\n        <a *ngIf=\"isLoggedIn()==false\" class=\"nav-link\" routerLink=\"/login\">\n          Login\n        </a>\n        <a *ngIf=\"isLoggedIn()==true\" (click)=\"logOut()\" class=\"nav-link\">\n          LogOut\n        </a>\n      </li>\n    </ul>\n  </nav>\n\n  <div class=\"container-fluid\">\n    <div class=\"row\">\n      <nav\n        id=\"sidebarMenu\"\n        class=\"col-md-3 col-lg-2 d-md-block bg-light sidebar collapse\"\n      >\n        <div class=\"sidebar-sticky pt-3\">\n          <ul class=\"nav flex-column\">\n            <li class=\"nav-item\">\n              <a class=\"nav-link active\" routerLink=\"/product\">\n                <span data-feather=\"home\"></span>\n                Mağaza <span class=\"sr-only\">(current)</span>\n              </a>\n            </li>\n            <li class=\"nav-item\">\n              <a class=\"nav-link\" routerLink=\"/product-add-1\">\n                <span data-feather=\"file\"></span>\n                Ürün Ekle /Klasik Form\n              </a>\n            </li>\n            <li class=\"nav-item\">\n              <a class=\"nav-link\" routerLink=\"/product-add-2\">\n                <span data-feather=\"shopping-cart\"></span>\n                Ürün Ekle /Reactive\n              </a>\n            </li>\n          </ul>\n        </div>\n      </nav>\n\n      <main role=\"main\" class=\"col-md-9 ml-sm-auto col-lg-10 px-md-4\">\n        <router-outlet></router-outlet>\n        <!-- tam olarak burada path burada gelir -->\n      </main>\n    </div>\n  </div>\n</body>\n","import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { AccountService } from 'src/app/services/account.service';\nimport { User } from './user';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\nmodel:User = new User();\n  constructor(private accountService:AccountService) { }\n\n  ngOnInit(): void {\n  }\n  login(form:NgForm){\nthis.accountService.login(this.model);\n  }\n\n}\n","\n    <form #loginForm=\"ngForm\" (ngSubmit)=\"login(loginForm)\" class=\"form-signin\">\n  <div class=\"text-center mb-4\">\n        <h1 class=\"h3 mb-3 font-weight-normal\">Sisteme Giriş</h1>\n  </div>\n\n  <div class=\"form-label-group\">\n    <input type=\"text\" #userName=\"ngModel\" [(ngModel)]=\"model.userName\" id=\"userName\" name=\"userName\" class=\"form-control\" placeholder=\"Kullanıcı Adı\" required autofocus>\n    <label for=\"inputEmail\">Kullanıcı Adı</label>\n  </div>\n\n  <div class=\"form-label-group\">\n    <input type=\"password\" #password=\"ngModel\" [(ngModel)]=\"model.password\" name=\"password\" id=\"password\" class=\"form-control\" placeholder=\"Şifre\" required>\n    <label for=\"inputPassword\">Şifre</label>\n  </div>\n  <button class=\"btn btn-lg btn-primary btn-block\" type=\"submit\">Giriş yap</button>\n  <p class=\"mt-5 mb-3 text-muted text-center\">&copy; 2017-2020</p>\n</form>\n","export class User{\r\n    userName:string;\r\n    password:string;\r\n}","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {FormsModule,ReactiveFormsModule} from \"@angular/forms\"\nimport {HttpClientModule} from \"@angular/common/http\"\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { NavComponent } from './components/nav/nav.component';\nimport { CategoryComponent } from './components/category/category.component';\nimport { ProductComponent } from './components/product/product.component';\nimport { ProductFilterPipe } from './components/product/product-filter.pipe';\nimport { ProductAddForms1Component } from './components/product/product-add-forms1/product-add-forms1.component';\nimport { ProductAddForms2Component } from './components/product/product-add-forms2/product-add-forms2.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { LoginGuard } from './components/login/login.guard';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavComponent,\n    CategoryComponent,\n    ProductComponent,\n    ProductFilterPipe,\n    ProductAddForms1Component,\n    ProductAddForms2Component,\n    LoginComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    HttpClientModule,\n    ReactiveFormsModule\n  ],\n  providers: [LoginGuard],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\ndeclare let alertify: any;\n@Injectable({\n  providedIn: 'root',\n  //buradan provided i silip app-module yazman daha sağlıklı\n})\nexport class AlertifyService {\n  constructor() {}\n  success(message: string): string {\n    return alertify.success(message);\n  }\n  error(message: string): string {\n    return alertify.error(message);\n  }\n  warning(message: string): string {\n    return alertify.warning(message);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { Category } from '../components/category/category';\nimport { Observable,throwError } from 'rxjs';\n//tap ve catchError için ekledik\nimport { tap,catchError } from 'rxjs/operators';\n@Injectable()\nexport class CategoryService {\n  constructor(private httpClient: HttpClient) {}\n  path = 'http://localhost:3000/categories';\n  //observable dönüyor\n  //yani diğer taraf buna subsribe olabilir.\n  getCategories(): Observable<Category[]> {\n    //subscribe ilgili datayı istediğinizi belirtiyor\n    //aynı zamanda o datayı ne yapacağını belirtir.\n    //Product olarak datayı map et.\n    //pipe ile 2.ci bir işlem yapılabilir\n    //burada başka bir izleme subsribe yaparak hata ayıklayalım\n    return this.httpClient.get<Category[]>(this.path).pipe(\n      tap(data=>console.log(JSON.stringify(data))),\n      catchError(this.handleError)\n    );\n  }\n  handleError(err: HttpErrorResponse) {\n    let errorMessage =\" \"\n    if(err.error instanceof ErrorEvent){\n      errorMessage = \"Bir hata oluştu\" + err.error.message\n    }else{\n      errorMessage = \"Sistemsel bir hata\"\n    }\n    return throwError(errorMessage)\n  }\n  \n}\n","import { Injectable } from '@angular/core';\nimport { User } from '../components/login/user';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AccountService {\n  constructor() {}\n  loggedIn=false;\n  login(user: User): boolean {\n    if (user.userName==\"engin\"&&user.password==\"12345\") {\n      this.loggedIn=true;\n      localStorage.setItem(\"isLogged\",user.userName);\n      return true\n    }\n    return false;\n  }\n  isLoggedIn(){\n    return this.loggedIn;\n  }\n  logOut(){\n    localStorage.removeItem(\"isLogged\");\n    this.loggedIn=false;\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { Product } from './product';\n\n@Pipe({\n  name: 'productFilter'\n})\nexport class ProductFilterPipe implements PipeTransform {\n//bana gelen datayı transforme yani değiştiriyorum\n  transform(value: Product[], filterText?: string): Product[] {\n    filterText=filterText?filterText.toLocaleLowerCase():null\n    //=filterText?filterText filterText var mı varsa küçük harf yap yoksa null\n    return filterText?value.filter((p:Product)=>p.name.toLocaleLowerCase().indexOf(filterText)!==-1):value;\n  //filterText varsa her bir product tipindeki p için \n  //p nin adını küçük harfe çevir listeye ekle\n  // yoksa değeri geri döndür.\n  }\n\n}","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { AlertifyService } from 'src/app/services/alertify.service';\nimport { CategoryService } from 'src/app/services/category.service';\nimport { ProductService } from 'src/app/services/product.service';\nimport { Category } from '../../category/category';\nimport { Product } from '../product';\n\n@Component({\n  selector: 'app-product-add-forms2',\n  templateUrl: './product-add-forms2.component.html',\n  styleUrls: ['./product-add-forms2.component.css'],\n  providers: [CategoryService,ProductService],\n})\nexport class ProductAddForms2Component implements OnInit {\n  constructor(\n    private formBuilder: FormBuilder,\n    private categoryService: CategoryService,\n    private productService:ProductService,\n    private alertifyService:AlertifyService\n  ) {}\n  productAddForm: FormGroup;\n  product: Product = new Product();\n  categories: Category[];\n  createProductAddForm() {\n    this.productAddForm = this.formBuilder.group({\n      name: ['', Validators.required],\n      description: ['', Validators.required],\n      imageUrl: ['', Validators.required],\n      price: ['', Validators.required],\n      categoryId: ['', Validators.required],\n    });\n  }\n\n  ngOnInit(): void {\n    this.createProductAddForm();\n    this.categoryService\n      .getCategories()\n      .subscribe((data) => (this.categories = data));\n  }\n  add() {\n    if (this.productAddForm.valid) {\n      this.product = Object.assign({}, this.productAddForm.value);\n    }\n    this.productService.addProduct(this.product).subscribe(data=>{\n      this.alertifyService.success(data.name + \" başarıyla eklendi.\")\n    });\n  }\n}\n","<h3>Yeni ürün ekle - Reactive</h3>\n<form [formGroup]=\"productAddForm\" (ngSubmit)=\"add()\">\n  <div class=\"form-group\">\n    <input\n      type=\"text\"\n      name=\"name\"\n      id=\"name\"\n      formControlName=\"name\"\n      class=\"form-control\"\n      placeholder=\"Ürün Adı\"\n    />\n    <div\n      class=\"alert alert-danger\"\n      *ngIf=\"\n        productAddForm.get('name').hasError('required') &&\n        productAddForm.get('name').dirty\n      \"\n    >\n      Ürün adı zorunludur\n    </div>\n  </div>\n  <div class=\"form-group\">\n    <input\n      type=\"text\"\n      name=\"description\"\n      id=\"description\"\n      formControlName=\"description\"\n      class=\"form-control\"\n      placeholder=\"Açıklama\"\n    />\n    <div\n      class=\"alert alert-danger\"\n      *ngIf=\"\n        productAddForm.get('description').hasError('required') &&\n        productAddForm.get('description').dirty\n      \"\n    >\n      Açıklama adı zorunludur\n    </div>\n  </div>\n  <div class=\"form-group\">\n    <input\n      type=\"text\"\n      name=\"imageUrl\"\n      id=\"imageUrl\"\n      formControlName=\"imageUrl\"\n      class=\"form-control\"\n      placeholder=\"Fotoğraf yolu\"\n    />\n    <div\n      class=\"alert alert-danger\"\n      *ngIf=\"\n        productAddForm.get('imageUrl').hasError('required') &&\n        productAddForm.get('imageUrl').dirty\n      \"\n    >\n      Fotoğraf yolu zorunludur\n    </div>\n  </div>\n  <div class=\"form-group\">\n    <input\n      type=\"text\"\n      name=\"price\"\n      id=\"price\"\n      formControlName=\"price\"\n      class=\"form-control\"\n      placeholder=\"Fiyat\"\n    />\n    <div\n      class=\"alert alert-danger\"\n      *ngIf=\"\n        productAddForm.get('price').hasError('required') &&\n        productAddForm.get('price').dirty\n      \"\n    >\n      Fiyat zorunludur\n    </div>\n  </div>\n  <div class=\"form-group\">\n    <select\n      class=\"form-control\"\n      formControlName=\"categoryId\"\n      id=\"categoryId\"\n      name=\"categoryId\"\n    >\n      <option *ngFor=\"let category of categories\" [value]=\"category.id\">\n        {{ category.name + \"  \" + category.id }}\n      </option>\n    </select>\n    <div\n      *ngIf=\"\n        productAddForm.get('categoryId').hasError('required') &&\n        productAddForm.get('categoryId').touched\n      \"\n      class=\"alert alert-danger\"\n    >\n      Kategori gereklidir\n    </div>\n  </div>\n  <button\n    type=\"submit\"\n    class=\"btn btn-primary\"\n    [disabled]=\"productAddForm.invalid\"\n  >\n    Ürün Ekle\n  </button>\n</form>\n","import { Component, OnInit } from '@angular/core';\nimport { AlertifyService } from 'src/app/services/alertify.service';\nimport { CategoryService } from 'src/app/services/category.service';\nimport { Category } from './category';\n\n@Component({\n  selector: 'app-category',\n  templateUrl: './category.component.html',\n  styleUrls: ['./category.component.css'],\n  providers: [CategoryService],\n})\nexport class CategoryComponent implements OnInit {\n  constructor(private categoryService: CategoryService) {}\n  title = 'Kategori Listesi';\n  categories: Category[];\n  ngOnInit(): void {\n    this.categoryService\n      .getCategories()\n      .subscribe((data) => (this.categories = data));\n  }\n}\n","<div class=\"nav-scroller py-1 mb-2\">\n  <nav class=\"nav d-flex\">\n    <a class=\"p-2 text-muted\"\n      routerLink=\"/products\"\n      >Tüm Ürünler</a\n    >\n    <a\n      *ngFor=\"let category of categories\"\n      class=\"p-2 text-muted\"\n      routerLink=\"/products/category/{{ category.id }}\"\n      >{{ category.name }}</a\n    >\n  </nav>\n</div>\n","export class Product{\r\n    id:number;\r\n    name:string;\r\n    price:number;\r\n    categoryId:number;\r\n    description:string;\r\n    imageUrl:string;\r\n}","import { Injectable } from '@angular/core';\r\nimport {\r\n  ActivatedRouteSnapshot,\r\n  CanActivate,\r\n  Router,\r\n  RouterStateSnapshot,\r\n} from '@angular/router';\r\nimport { AccountService } from 'src/app/services/account.service';\r\n\r\n@Injectable()\r\nexport class LoginGuard implements CanActivate {\r\n  constructor(private accountService: AccountService, private router: Router) {}\r\n  canActivate(\r\n    route: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot\r\n  ): boolean {\r\n    let logged = this.accountService.isLoggedIn();\r\n    if (logged) {\r\n      return true;\r\n    }\r\n    this.router.navigate(['login']);\r\n    return false;\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './components/login/login.component';\nimport { LoginGuard } from './components/login/login.guard';\nimport { ProductAddForms1Component } from './components/product/product-add-forms1/product-add-forms1.component';\nimport { ProductAddForms2Component } from './components/product/product-add-forms2/product-add-forms2.component';\nimport { ProductComponent } from './components/product/product.component';\n\nconst routes: Routes = [\n  {path:\"products\",component:ProductComponent},\n  //pathmatch olayı kesinlikle bişey yazılmamıssa demek\n  {path:\"\",redirectTo:\"products\",pathMatch:\"full\"},\n  //:categoryId : dinamik verilerde \":\" ile belirtilir\n  {path:\"products/category/:categoryId\",component:ProductComponent},\n  {path:\"product-add-1\",component:ProductAddForms1Component,canActivate:[LoginGuard]},\n  {path:\"product-add-2\",component:ProductAddForms2Component},\n  {path:\"login\",component:LoginComponent},\n  {path:\"**\",redirectTo:\"products\",pathMatch:\"full\"}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}